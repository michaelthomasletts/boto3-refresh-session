name: Bump Version, Push, and Deploy Docs

on:
  push:
    branches:
      - main

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history is fetched

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install bump2version

      - name: Determine Version Type
        run: |
          # Default to patch
          VERSION_TYPE="patch"

          # Get the latest commit message or PR title
          if [ "${{ github.event_name }}" == "push" ]; then
            MESSAGE=$(git log -1 --pretty=%B)
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            MESSAGE="${{ github.event.pull_request.title }}"
          fi

          # Check for version bump keywords
          if echo "$MESSAGE" | grep -qi '\[major\]'; then
            VERSION_TYPE="major"
          elif echo "$MESSAGE" | grep -qi '\[minor\]'; then
            VERSION_TYPE="minor"
          fi

          echo "Determined VERSION_TYPE=$VERSION_TYPE"
          echo "VERSION_TYPE=$VERSION_TYPE" >> $GITHUB_ENV

      - name: Bump Version
        run: python bump_version $VERSION_TYPE

      - name: Push Changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add .
          git commit -m "Bump $VERSION_TYPE version"
          git push

  deploy-docs:
    needs: bump-version  # Run this only after the version bump is successful
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full history is fetched

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install -r requirements.txt  # Ensure all dependencies for docs are installed

      - name: Build and Deploy Docs
        run: |
          mkdocs build  # Or whatever command you use to build docs
          mkdocs gh-deploy --force  # Deploy docs to GitHub Pages
